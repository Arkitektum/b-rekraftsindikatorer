# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Installer Asciidoctor
        run: |
          gem install asciidoctor --user-install
          echo "$(ruby -r rubygems -e 'puts Gem.user_dir')/bin" >> $GITHUB_PATH
      
      - name: Installer pandoc
        run: sudo apt-get update && sudo apt-get install -y pandoc

      - name: Konverter .md eller .adoc til .html
        run: |
          mkdir -p public
          
          find vocabulary/ -name "*.md" | while read file; do
            out_file="public/${file%.md}.html"
            mkdir -p "$(dirname "$out_file")"
            pandoc "$file" -o "$out_file"
          done
          
          find vocabulary/ -name "*.adoc" | while read file; do
            out_file="public/${file%.adoc}.html"
            md_equiv="${file%.adoc}.md"
            if [ ! -f "$md_equiv" ]; then
              mkdir -p "$(dirname "$out_file")"
              asciidoctor -o "$out_file" "$file"
            fi
          done

          # Lag en enkel index.html med lenker til alle .html-filer
          INDEX_FILE="public/index.html"
          echo "<!DOCTYPE html><html><head><meta charset='UTF-8'><title>Index</title></head><body>" > "$INDEX_FILE"
          echo "<h1>Genererte dokumenter</h1><ul>" >> "$INDEX_FILE"

          find public/ -name "*.html" ! -name "index.html" | sort | while read file; do
            rel_path="${file#public/}"
            echo "<li><a href=\"$rel_path\">$rel_path</a></li>" >> "$INDEX_FILE"
          done

          echo "</ul></body></html>" >> "$INDEX_FILE"
          
      - name: Kopier .ttl-filer
        run: |
          find vocabulary/ -name "*.ttl" | while read file; do
            out_file="public/${file}"
            mkdir -p "$(dirname "$out_file")"
            cp "$file" "$out_file"
          done

      - name: Last opp artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
