# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Installer Asciidoctor
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby
          gem install asciidoctor
      - name: Konverter .adoc til .html
        run: |
          mkdir -p public
          find vocabulary/ -name "*.adoc" | while read file; do
            out_file="public/${file%.adoc}.html"
            mkdir -p "$(dirname "$out_file")"
            asciidoctor -o "$out_file" "$file"
          done
      - name: Kopier .ttl-filer
        run: |
          find vocabulary/ -name "*.ttl" | while read file; do
            out_file="public/${file}"
            mkdir -p "$(dirname "$out_file")"
            cp "$file" "$out_file"
          done
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
